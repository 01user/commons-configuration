<?xml version="1.0" encoding="UTF-8"?>

<!--build.xml generated by maven from project.xml version 1.1-dev
  on date January 29 2005, time 1728-->

<project default="jar" name="commons-configuration" basedir=".">
  <property name="defaulttargetdir" value="target">
  </property>
  <property name="libdir" value="target/lib">
  </property>
  <property name="classesdir" value="target/classes">
  </property>
  <property name="testclassesdir" value="target/test-classes">
  </property>
  <property name="testclassesdir" value="target/test-classes">
  </property>
  <property name="testreportdir" value="target/test-reports">
  </property>
  <property name="distdir" value="dist">
  </property>
  <property name="javadocdir" value="dist/docs/api">
  </property>
  
  <!-- Manual changes for dealing with the conf directory -->
  <property name="confdir" value="conf"/>
  <property name="targetconfdir" value="${defaulttargetdir}/${confdir}"/>
  <!-- Manual changes end -->
  
  <property name="final.name" value="commons-configuration-1.1-dev">
  </property>
  <path id="build.classpath">
    <fileset dir="${libdir}">
      <include name="**/*.jar">
      </include>
    </fileset>
  </path>
  <target name="init" description="o Initializes some properties">
    <mkdir dir="${libdir}">
    </mkdir>
    <condition property="noget">
      <equals arg2="only" arg1="${build.sysclasspath}">
      </equals>
    </condition>
    <!--Test if JUNIT is present in ANT classpath-->

    <available property="Junit.present" classname="junit.framework.Test">
    </available>
  </target>
  <target name="compile" description="o Compile the code" depends="get-deps">
    <mkdir dir="${classesdir}">
    </mkdir>
    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="src/java">
        </pathelement>
      </src>
      <classpath refid="build.classpath">
      </classpath>
    </javac>
    <copy todir="${classesdir}">
      <fileset dir="conf">
        <include name="digesterRules.xml">
        </include>
        <include name="properties.dtd">
        </include>
      </fileset>
    </copy>
  </target>
  <target name="jar" description="o Create the jar" depends="compile,test">
    <jar jarfile="${defaulttargetdir}/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
    </jar>
  </target>
  <target name="clean" description="o Clean up the generated directories">
    <delete dir="${defaulttargetdir}">
    </delete>
    <delete dir="${distdir}">
    </delete>
  </target>
  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
    <mkdir dir="dist">
    </mkdir>
    <copy todir="dist">
      <fileset dir="${defaulttargetdir}" includes="*.jar">
      </fileset>
      <fileset dir="${basedir}" includes="LICENSE*, README*">
      </fileset>
    </copy>
  </target>
  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
    <fail message="There were test failures.">
    </fail>
  </target>
  <target name="internal-test" if="Junit.present" depends="junit-present,compile-tests">
    <mkdir dir="${testreportdir}">
    </mkdir>
    <junit dir="./" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
      <sysproperty key="basedir" value=".">
      </sysproperty>
      <formatter type="xml">
      </formatter>
      <formatter usefile="false" type="plain">
      </formatter>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${testclassesdir}">
        </pathelement>
        <pathelement path="${classesdir}">
        </pathelement>
        <!-- Manual changes for dealing with the conf directory -->
        <pathelement path="${targetconfdir}"/>
        <path>
          <fileset dir="${targetconfdir}">
            <include name="resources.jar"/>
          </fileset>
        </path>
        <!-- Manual changes end -->
        
      </classpath>
      <batchtest todir="${testreportdir}">
        <fileset dir="src/test">
          <include name="**/*Test*.java">
          </include>
          <exclude name="**/TestBasePropertiesConfiguration.java">
          </exclude>
          <exclude name="**/NonStringTestHolder.java">
          </exclude>
          <exclude name="**/TestAbstractConfiguration.java">
          </exclude>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="junit-present" unless="Junit.present" depends="init">
    <echo>================================= WARNING ================================</echo>
    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>
    <echo>==========================================================================</echo>
  </target>
  <target name="compile-tests" if="Junit.present" depends="junit-present,compile">
    <mkdir dir="${testclassesdir}">
    </mkdir>
    <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
      <src>
        <pathelement location="src/test">
        </pathelement>
      </src>
      <classpath>
        <path refid="build.classpath">
        </path>
        <pathelement path="${classesdir}">
        </pathelement>
      </classpath>
    </javac>
    <!-- Manual changes for dealing with the conf directory -->
    <mkdir dir="${targetconfdir}"/>
    <copy todir="${targetconfdir}">
      <fileset dir="${confdir}">
        <include name="*.xml">
        </include>
      </fileset>
    </copy>
    <copy todir="${targetconfdir}">
      <fileset dir="${confdir}">
        <include name="testClasspath.properties">
        </include>
        <include name="testdb.script">
        </include>
        <include name="*.properties">
        </include>
        <include name="*.dtd">
        </include>
        <include name="resources.jar"/>
      </fileset>
    </copy>
    <mkdir dir="${targetconfdir}/org/apache/commons/configuration">
    </mkdir>
    <copy todir="${targetconfdir}/org/apache/commons/configuration">
      <fileset dir="${confdir}">
        <include name="test.properties">
        </include>
        <include name="include.properties">
        </include>
      </fileset>
    </copy>
    <mkdir dir="${testclassesdir}/config">
    </mkdir>
    <copy todir="${testclassesdir}/config">
      <fileset dir="${confdir}">
        <include name="**/*.properties">
        </include>
      </fileset>
    </copy>
    <!-- Manual changes end -->
  </target>
  <target name="javadoc" description="o Generate javadoc" depends="get-deps">
    <mkdir dir="${javadocdir}">
    </mkdir>
    <tstamp>
      <format pattern="2001-yyyy" property="year">
      </format>
    </tstamp>
    <property name="copyright" value="Copyright &amp;copy;  The Apache Software Foundation. All Rights Reserved.">
    </property>
    <property name="title" value="Commons Configuration 1.1-dev API">
    </property>
    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="src/java" packagenames="org.apache.commons.configuration.*">
      <classpath>
        <path refid="build.classpath">
        </path>
      </classpath>
    </javadoc>
  </target>
  <target name="get-deps" unless="noget" depends="init">
    <!--Proxy settings works only with a JDK 1.2 and higher.-->

    <setproxy>
    </setproxy>
    <get dest="${libdir}/commons-collections-3.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-collections/jars/commons-collections-3.0.jar">
    </get>
    <get dest="${libdir}/commons-lang-2.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-lang/jars/commons-lang-2.0.jar">
    </get>
    <get dest="${libdir}/dom4j-1.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/dom4j/jars/dom4j-1.4.jar">
    </get>
    <get dest="${libdir}/commons-logging-1.0.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.4.jar">
    </get>
    <get dest="${libdir}/commons-digester-1.5.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-digester/jars/commons-digester-1.5.jar">
    </get>
    <get dest="${libdir}/commons-beanutils-core-1.7.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-beanutils/jars/commons-beanutils-core-1.7.0.jar">
    </get>
    <get dest="${libdir}/commons-beanutils-bean-collections-1.7.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-beanutils/jars/commons-beanutils-bean-collections-1.7.0.jar">
    </get>
    <get dest="${libdir}/xerces-2.2.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/xerces/jars/xerces-2.2.1.jar">
    </get>
    <get dest="${libdir}/xml-apis-2.0.2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/xml-apis/jars/xml-apis-2.0.2.jar">
    </get>
    <get dest="${libdir}/servletapi-2.3.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/servletapi/jars/servletapi-2.3.jar">
    </get>
    <get dest="${libdir}/spice-jndikit-1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/spice/jars/spice-jndikit-1.1.jar">
    </get>
    <get dest="${libdir}/commons-dbcp-1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-dbcp/jars/commons-dbcp-1.1.jar">
    </get>
    <get dest="${libdir}/commons-pool-1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-pool/jars/commons-pool-1.1.jar">
    </get>
    <get dest="${libdir}/hsqldb-1.7.2.2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/hsqldb/jars/hsqldb-1.7.2.2.jar">
    </get>
    <get dest="${libdir}/dbunit-2.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/dbunit/jars/dbunit-2.1.jar">
    </get>
    <get dest="${libdir}/junit-3.8.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/junit/jars/junit-3.8.1.jar">
    </get>
    <get dest="${libdir}/junit-addons-1.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/junit-addons/jars/junit-addons-1.4.jar">
    </get>
    <get dest="${libdir}/mockobjects-core-0.09.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/mockobjects/jars/mockobjects-core-0.09.jar">
    </get>
    <get dest="${libdir}/mockobjects-jdk1.4-j2ee1.3-0.09.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/mockobjects/jars/mockobjects-jdk1.4-j2ee1.3-0.09.jar">
    </get>
    <get dest="${libdir}/resources-1.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/resources/jars/resources-1.0.jar">
    </get>
    <get dest="${libdir}/maven-tasks-plugin-1.1.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/maven-plugins/plugins/maven-tasks-plugin-1.1.0.jar">
    </get>
    <get dest="${libdir}/maven-findbugs-plugin-0.8.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/maven-plugins/plugins/maven-findbugs-plugin-0.8.4.jar">
    </get>
  </target>
  <target name="install-maven">
    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar">
    </get>
    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
    </unjar>
  </target>
</project>