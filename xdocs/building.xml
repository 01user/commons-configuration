<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<document>

    <properties>
        <title>Building</title>
        <author email="oheger@apache.org">Oliver Heger</author>
    </properties>

    <body>

        <section name="Overview">
          <p>
            Commons Configuration can be built using
            <a href="http://maven.apache.org">Maven 2</a> or
            <a href="http://ant.apache.org">Ant</a>.
          </p>
        </section>

        <section name="Maven Goals">
          <p>
            Maven 2 is our recommended build tool. To build the Configuration
            jar file, change into the directory where you unzipped the source
            distribution or where you checked out the sources from SVN and run
            "mvn package". The result will be in the (newly created) "target"
            subdirectory.
          </p>
          <p>
            To build the Javadocs, run "maven javadoc".
            The result will be in "target/docs/apidocs".
          </p>
          <p>
            To build the full website, run "mvn site".
            The result will be in "target/docs".
          </p>
        </section>

        <section name="Ant Goals">
          <p>
            To build a jar file, change into Configuration's root directory and run "ant jar".
            The result will be in the "target" subdirectory.
          </p>
          <p>
            To build the Javadocs, run "ant javadoc".
            The result will be in "target/docs/apidocs".
          </p>
        </section>
        
        <section name="Setting custom build parameters">
          <p>
            Both the maven and the ant build script support a file called
            <code>build.properties</code> that can contain custom properties
            definitions. If this file exists in the project's root directory,
            it will be read and the properties it defines will be added to the
            running build script. This mechanism allows for customizing the
            build process without the need of changing the main build scripts.
          </p>
<!--
          <p>
            One use case for setting custom build properties would be to build
            for a specific JDK version: If you build the jar on a JDK 1.5 for
            instance, the classes won't be compatible with older JDK versions.
            To enforce compatibility you can create a <code>build.properties</code>
            file containing the following maven specific settings:
          </p>
          <source><![CDATA[
maven.compile.source = 1.3
maven.compile.target = 1.3
]]></source>
-->
        </section>
    </body>

</document>
